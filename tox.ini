[tox]
minversion = 4.0.0
skip_install = true
env_list = py311,py312,py313

[testenv]
description = Run the plugin unit tests
deps =
    ansible-core
    pytest
commands =
    pytest tests/unit

[testenv:roles]
description = Run the roles tests
basepython = python3
deps =
    pytest
    ansible==11.4.0
    molecule==25.4.0
    molecule-proxmox==1.1.0
    robotframework==7.2.2
passenv =
    SSH_*
    PROXMOX_*
commands =
    pytest -s -v tests/integration/roles {posargs}

[testenv:playbooks]
description = Run the playbook tests
basepython = python3
deps =
    pytest
    ansible==11.4.0
    molecule==25.4.0
    molecule-proxmox==1.1.0
    robotframework==7.2.2
passenv =
    SSH_*
    PROXMOX_*
commands =
    pytest -s -v tests/integration/playbooks {posargs}

[testenv:lint]
description = Run lint checks
basepython = python3
deps =
    ansible==11.4.0
    ansible-lint==25.4.0
commands =
    ansible-lint roles playbooks extensions

[testenv:docs]
description = Build the documentation
basepython = python3
deps =
  Sphinx==7.2.6
  sphinx-rtd-theme==2.0.0
changedir = docs
commands =
  sphinx-build -M html source build

[testenv:build]
description = Build the distribution tarball
basepython = python3
allowlist_externals =
    mkdir
deps =
    ansible-core
commands =
    mkdir -p builds
    ansible-galaxy collection build --output-path builds .

[testenv:install]
description = Build and install the distribution tarball
basepython = python3
allowlist_externals =
    mkdir
    bash
deps =
    ansible-core
commands =
    mkdir builds
    ansible-galaxy collection build --output-path builds .
    bash -c "ansible-galaxy collection install --force --pre builds/openafs_contrib-openafs-*.tar.gz"

[testenv:dev]
description = Create development environment
basepython = python3
deps =
    pytest
    ansible==11.4.0
    molecule==25.4.0
    molecule-proxmox==1.1.0
    robotframework==7.2.2
passenv =
    SSH_*
    PROXMOX_*
    ANSIBLE_COLLECTIONS_PATH
commands =
